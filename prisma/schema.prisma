// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id       String    @id @default(cuid())
  email    String    @unique
  name     String
  password String
  role     UserRole  @default(USER)
  card     Card?
  Account  Account[]
  Session  Session[]
  transactions Transaction[]
  comments Comment[]
  balance_BTC Float    @default(0)
}

model Coin {
  id                String  @id
  rank              String  @unique
  symbol            String  @unique
  name              String
  supply            String
  maxSupply         String?
  marketCapUsd      String
  volumeUsd24Hr     String
  priceUsd          String
  changePercent24Hr String
  vwap24Hr          String?
  explorer          String?
  comments          Comment[]
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String? 
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Card {
  id            String   @id @default(cuid())
  cardNumber    String   @unique
  cardHolder    String
  expirationDate String
  cvc          String
  balance      Float    @default(0)
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Transaction {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  amountUSD   Float
  amountBTC   Float
  serviceFee  Float    @default(0.000)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Comment {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  cryptoId    String
  coin        Coin     @relation(fields: [cryptoId], references: [id])
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
